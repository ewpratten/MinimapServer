buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }
}

plugins {
    id 'java'
    id 'java-library'
    id 'com.github.johnrengelman.shadow' version '6.1.0'
    id 'kr.entree.spigradle' version '2.2.3'
    id 'io.freefair.lombok' version '5.3.3.3'
}

group = project.property("plugin.group")
version = project.property("plugin.version")
archivesBaseName = project.property("plugin.name")

apply from: "gradle_scripts/sensible.gradle"

sourceCompatibility = 1.8
targetCompatibility = 1.8


ext {
    mcVersion = project.property("minecraft.version")
}



spigot {
    name = project.property("plugin.name")
    authors = [project.property("plugin.author")]
    apiVersion = project.property("api.version")
    version = project.property("plugin.version")
    load = STARTUP
    //    depends = ['']
    debug {
         buildVersion = project.property("minecraft.version")
    }
}

repositories {
    mavenCentral()
    jcenter()
    papermc()
    spigot()
    jitpack()
    maven { url "https://libraries.minecraft.net" }
    maven { url = "https://repo.aikar.co/content/groups/aikar/" }
    maven { url = "https://hub.spigotmc.org/nexus/content/groups/public/" }
}

def urlFile = { url, name ->
    File file = new File("$buildDir/download/${name}.jar")
    file.parentFile.mkdirs()
    if (!file.exists()) {
        new URL(url).withInputStream { downloadStream ->
            file.withOutputStream { fileOut ->
                fileOut << downloadStream
            }
        }
    }
    files(file.absolutePath)
}


dependencies {

    // Game core
    compileOnly spigot(project.property("minecraft.version"))

    // Tests
    testImplementation 'org.junit.jupiter:junit-jupiter:5.+'
    testImplementation "org.mockito:mockito-core:4.+"
    testImplementation mockBukkit()
    testImplementation 'org.assertj:assertj-core:3.+'

}

shadowJar {
    classifier = ''
    version = project.property("plugin.version")
    relocate 'co.aikar.commands', "${project.property('plugin.group')}.${project.property('plugin.name')}.acf"
    relocate 'co.aikar.locales', "${project.property('plugin.group')}.${project.property('plugin.name')}.locales"
}

tasks.build.dependsOn(shadowJar)
tasks.prepareSpigotPlugins.dependsOn(shadowJar)

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
    ignoreFailures = false
}

processResources {
    project.properties.put("version", this.version)
    expand project.properties
}

compileJava {
    options.compilerArgs += ["-parameters"]
    options.fork = true
    options.forkOptions.executable = 'javac'
}

defaultTasks 'build'